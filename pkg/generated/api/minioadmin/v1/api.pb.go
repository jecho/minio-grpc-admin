// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: api.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetServerInformationMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *Endpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *GetServerInformationMsg) Reset() {
	*x = GetServerInformationMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationMsg) ProtoMessage() {}

func (x *GetServerInformationMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationMsg.ProtoReflect.Descriptor instead.
func (*GetServerInformationMsg) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetServerInformationMsg) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type GetServerInformationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode         string                              `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Domain       []string                            `protobuf:"bytes,2,rep,name=domain,proto3" json:"domain,omitempty"`
	Region       string                              `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	SqsArn       []string                            `protobuf:"bytes,4,rep,name=sqs_arn,json=sqsArn,proto3" json:"sqs_arn,omitempty"`
	DeploymentId string                              `protobuf:"bytes,5,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Buckets      *GetServerInformationReply_Buckets  `protobuf:"bytes,6,opt,name=buckets,proto3" json:"buckets,omitempty"`
	Objects      *GetServerInformationReply_Objects  `protobuf:"bytes,7,opt,name=objects,proto3" json:"objects,omitempty"`
	Usage        *GetServerInformationReply_Usage    `protobuf:"bytes,8,opt,name=usage,proto3" json:"usage,omitempty"`
	Services     *GetServerInformationReply_Services `protobuf:"bytes,9,opt,name=services,proto3" json:"services,omitempty"`
	// Types that are assignable to Backend:
	//	*GetServerInformationReply_FsBackend
	//	*GetServerInformationReply_ErasureBackend
	Backend isGetServerInformationReply_Backend           `protobuf_oneof:"backend"`
	Servers []*GetServerInformationReply_ServerProperties `protobuf:"bytes,12,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *GetServerInformationReply) Reset() {
	*x = GetServerInformationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply) ProtoMessage() {}

func (x *GetServerInformationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetServerInformationReply) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *GetServerInformationReply) GetDomain() []string {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *GetServerInformationReply) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetServerInformationReply) GetSqsArn() []string {
	if x != nil {
		return x.SqsArn
	}
	return nil
}

func (x *GetServerInformationReply) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *GetServerInformationReply) GetBuckets() *GetServerInformationReply_Buckets {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *GetServerInformationReply) GetObjects() *GetServerInformationReply_Objects {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *GetServerInformationReply) GetUsage() *GetServerInformationReply_Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *GetServerInformationReply) GetServices() *GetServerInformationReply_Services {
	if x != nil {
		return x.Services
	}
	return nil
}

func (m *GetServerInformationReply) GetBackend() isGetServerInformationReply_Backend {
	if m != nil {
		return m.Backend
	}
	return nil
}

func (x *GetServerInformationReply) GetFsBackend() *GetServerInformationReply_FSBackendType {
	if x, ok := x.GetBackend().(*GetServerInformationReply_FsBackend); ok {
		return x.FsBackend
	}
	return nil
}

func (x *GetServerInformationReply) GetErasureBackend() *GetServerInformationReply_ErasureBackendType {
	if x, ok := x.GetBackend().(*GetServerInformationReply_ErasureBackend); ok {
		return x.ErasureBackend
	}
	return nil
}

func (x *GetServerInformationReply) GetServers() []*GetServerInformationReply_ServerProperties {
	if x != nil {
		return x.Servers
	}
	return nil
}

type isGetServerInformationReply_Backend interface {
	isGetServerInformationReply_Backend()
}

type GetServerInformationReply_FsBackend struct {
	FsBackend *GetServerInformationReply_FSBackendType `protobuf:"bytes,10,opt,name=fs_backend,json=fsBackend,proto3,oneof"`
}

type GetServerInformationReply_ErasureBackend struct {
	ErasureBackend *GetServerInformationReply_ErasureBackendType `protobuf:"bytes,11,opt,name=erasure_backend,json=erasureBackend,proto3,oneof"`
}

func (*GetServerInformationReply_FsBackend) isGetServerInformationReply_Backend() {}

func (*GetServerInformationReply_ErasureBackend) isGetServerInformationReply_Backend() {}

type GetVersionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionMsg) Reset() {
	*x = GetVersionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionMsg) ProtoMessage() {}

func (x *GetVersionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionMsg.ProtoReflect.Descriptor instead.
func (*GetVersionMsg) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyId     string `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string `protobuf:"bytes,3,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	Ssl             bool   `protobuf:"varint,4,opt,name=ssl,proto3" json:"ssl,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Endpoint) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Endpoint) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *Endpoint) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *Endpoint) GetSsl() bool {
	if x != nil {
		return x.Ssl
	}
	return false
}

type GetVersionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If operation was OK
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// Version Information
	VersionInformation *GetVersionReply_VersionInformation `protobuf:"bytes,2,opt,name=version_information,json=versionInformation,proto3" json:"version_information,omitempty"`
}

func (x *GetVersionReply) Reset() {
	*x = GetVersionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionReply) ProtoMessage() {}

func (x *GetVersionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionReply.ProtoReflect.Descriptor instead.
func (*GetVersionReply) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetVersionReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetVersionReply) GetVersionInformation() *GetVersionReply_VersionInformation {
	if x != nil {
		return x.VersionInformation
	}
	return nil
}

type GetServerInformationReply_Buckets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetServerInformationReply_Buckets) Reset() {
	*x = GetServerInformationReply_Buckets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Buckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Buckets) ProtoMessage() {}

func (x *GetServerInformationReply_Buckets) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Buckets.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Buckets) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetServerInformationReply_Buckets) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetServerInformationReply_Objects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetServerInformationReply_Objects) Reset() {
	*x = GetServerInformationReply_Objects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Objects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Objects) ProtoMessage() {}

func (x *GetServerInformationReply_Objects) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Objects.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Objects) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetServerInformationReply_Objects) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetServerInformationReply_Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size uint64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetServerInformationReply_Usage) Reset() {
	*x = GetServerInformationReply_Usage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Usage) ProtoMessage() {}

func (x *GetServerInformationReply_Usage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Usage.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Usage) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 2}
}

func (x *GetServerInformationReply_Usage) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetServerInformationReply_Services struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vault         *GetServerInformationReply_Services_Vault           `protobuf:"bytes,1,opt,name=vault,proto3" json:"vault,omitempty"`
	Ldap          *GetServerInformationReply_Services_LDAP            `protobuf:"bytes,2,opt,name=ldap,proto3" json:"ldap,omitempty"`
	Loggers       []*GetServerInformationReply_Services_Logger        `protobuf:"bytes,3,rep,name=loggers,proto3" json:"loggers,omitempty"`
	Audits        []*GetServerInformationReply_Services_Audit         `protobuf:"bytes,4,rep,name=audits,proto3" json:"audits,omitempty"`
	Notifications []*GetServerInformationReply_Services_Notifications `protobuf:"bytes,5,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *GetServerInformationReply_Services) Reset() {
	*x = GetServerInformationReply_Services{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services) ProtoMessage() {}

func (x *GetServerInformationReply_Services) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3}
}

func (x *GetServerInformationReply_Services) GetVault() *GetServerInformationReply_Services_Vault {
	if x != nil {
		return x.Vault
	}
	return nil
}

func (x *GetServerInformationReply_Services) GetLdap() *GetServerInformationReply_Services_LDAP {
	if x != nil {
		return x.Ldap
	}
	return nil
}

func (x *GetServerInformationReply_Services) GetLoggers() []*GetServerInformationReply_Services_Logger {
	if x != nil {
		return x.Loggers
	}
	return nil
}

func (x *GetServerInformationReply_Services) GetAudits() []*GetServerInformationReply_Services_Audit {
	if x != nil {
		return x.Audits
	}
	return nil
}

func (x *GetServerInformationReply_Services) GetNotifications() []*GetServerInformationReply_Services_Notifications {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type GetServerInformationReply_FSBackendType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackendType string `protobuf:"bytes,1,opt,name=backend_type,json=backendType,proto3" json:"backend_type,omitempty"`
}

func (x *GetServerInformationReply_FSBackendType) Reset() {
	*x = GetServerInformationReply_FSBackendType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_FSBackendType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_FSBackendType) ProtoMessage() {}

func (x *GetServerInformationReply_FSBackendType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_FSBackendType.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_FSBackendType) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 4}
}

func (x *GetServerInformationReply_FSBackendType) GetBackendType() string {
	if x != nil {
		return x.BackendType
	}
	return ""
}

type GetServerInformationReply_ErasureBackendType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackendType      string `protobuf:"bytes,1,opt,name=backend_type,json=backendType,proto3" json:"backend_type,omitempty"`
	OnlineDisks      int32  `protobuf:"varint,2,opt,name=online_disks,json=onlineDisks,proto3" json:"online_disks,omitempty"`
	OfflineDisks     int32  `protobuf:"varint,3,opt,name=offline_disks,json=offlineDisks,proto3" json:"offline_disks,omitempty"`
	StandardScData   int32  `protobuf:"varint,4,opt,name=standard_sc_data,json=standardScData,proto3" json:"standard_sc_data,omitempty"`
	StandardScParity int32  `protobuf:"varint,5,opt,name=standard_sc_parity,json=standardScParity,proto3" json:"standard_sc_parity,omitempty"`
	RrscData         int32  `protobuf:"varint,6,opt,name=rrsc_data,json=rrscData,proto3" json:"rrsc_data,omitempty"`
	RrscParity       int32  `protobuf:"varint,7,opt,name=rrsc_parity,json=rrscParity,proto3" json:"rrsc_parity,omitempty"`
}

func (x *GetServerInformationReply_ErasureBackendType) Reset() {
	*x = GetServerInformationReply_ErasureBackendType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_ErasureBackendType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_ErasureBackendType) ProtoMessage() {}

func (x *GetServerInformationReply_ErasureBackendType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_ErasureBackendType.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_ErasureBackendType) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 5}
}

func (x *GetServerInformationReply_ErasureBackendType) GetBackendType() string {
	if x != nil {
		return x.BackendType
	}
	return ""
}

func (x *GetServerInformationReply_ErasureBackendType) GetOnlineDisks() int32 {
	if x != nil {
		return x.OnlineDisks
	}
	return 0
}

func (x *GetServerInformationReply_ErasureBackendType) GetOfflineDisks() int32 {
	if x != nil {
		return x.OfflineDisks
	}
	return 0
}

func (x *GetServerInformationReply_ErasureBackendType) GetStandardScData() int32 {
	if x != nil {
		return x.StandardScData
	}
	return 0
}

func (x *GetServerInformationReply_ErasureBackendType) GetStandardScParity() int32 {
	if x != nil {
		return x.StandardScParity
	}
	return 0
}

func (x *GetServerInformationReply_ErasureBackendType) GetRrscData() int32 {
	if x != nil {
		return x.RrscData
	}
	return 0
}

func (x *GetServerInformationReply_ErasureBackendType) GetRrscParity() int32 {
	if x != nil {
		return x.RrscParity
	}
	return 0
}

type GetServerInformationReply_ServerProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    string                                                `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Endpoint string                                                `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Uptime   int64                                                 `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Version  string                                                `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	CommitId string                                                `protobuf:"bytes,5,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	Network  []*GetServerInformationReply_ServerProperties_Network `protobuf:"bytes,6,rep,name=network,proto3" json:"network,omitempty"`
	Disks    []*GetServerInformationReply_ServerProperties_Disk    `protobuf:"bytes,7,rep,name=disks,proto3" json:"disks,omitempty"`
}

func (x *GetServerInformationReply_ServerProperties) Reset() {
	*x = GetServerInformationReply_ServerProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_ServerProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_ServerProperties) ProtoMessage() {}

func (x *GetServerInformationReply_ServerProperties) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_ServerProperties.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_ServerProperties) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 6}
}

func (x *GetServerInformationReply_ServerProperties) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties) GetCommitId() string {
	if x != nil {
		return x.CommitId
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties) GetNetwork() []*GetServerInformationReply_ServerProperties_Network {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *GetServerInformationReply_ServerProperties) GetDisks() []*GetServerInformationReply_ServerProperties_Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

type GetServerInformationReply_Services_Vault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Encrypt string `protobuf:"bytes,2,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	Decrypt string `protobuf:"bytes,3,opt,name=decrypt,proto3" json:"decrypt,omitempty"`
}

func (x *GetServerInformationReply_Services_Vault) Reset() {
	*x = GetServerInformationReply_Services_Vault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Vault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Vault) ProtoMessage() {}

func (x *GetServerInformationReply_Services_Vault) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Vault.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Vault) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 0}
}

func (x *GetServerInformationReply_Services_Vault) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetServerInformationReply_Services_Vault) GetEncrypt() string {
	if x != nil {
		return x.Encrypt
	}
	return ""
}

func (x *GetServerInformationReply_Services_Vault) GetDecrypt() string {
	if x != nil {
		return x.Decrypt
	}
	return ""
}

type GetServerInformationReply_Services_LDAP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetServerInformationReply_Services_LDAP) Reset() {
	*x = GetServerInformationReply_Services_LDAP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_LDAP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_LDAP) ProtoMessage() {}

func (x *GetServerInformationReply_Services_LDAP) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_LDAP.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_LDAP) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 1}
}

func (x *GetServerInformationReply_Services_LDAP) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetServerInformationReply_Services_Logger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoggerMap []*GetServerInformationReply_Services_Logger_LoggerMap `protobuf:"bytes,1,rep,name=logger_map,json=loggerMap,proto3" json:"logger_map,omitempty"`
}

func (x *GetServerInformationReply_Services_Logger) Reset() {
	*x = GetServerInformationReply_Services_Logger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Logger) ProtoMessage() {}

func (x *GetServerInformationReply_Services_Logger) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Logger.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Logger) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 2}
}

func (x *GetServerInformationReply_Services_Logger) GetLoggerMap() []*GetServerInformationReply_Services_Logger_LoggerMap {
	if x != nil {
		return x.LoggerMap
	}
	return nil
}

type GetServerInformationReply_Services_Audit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditMap []*GetServerInformationReply_Services_Audit_AuditMap `protobuf:"bytes,1,rep,name=audit_map,json=auditMap,proto3" json:"audit_map,omitempty"`
}

func (x *GetServerInformationReply_Services_Audit) Reset() {
	*x = GetServerInformationReply_Services_Audit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Audit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Audit) ProtoMessage() {}

func (x *GetServerInformationReply_Services_Audit) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Audit.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Audit) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 3}
}

func (x *GetServerInformationReply_Services_Audit) GetAuditMap() []*GetServerInformationReply_Services_Audit_AuditMap {
	if x != nil {
		return x.AuditMap
	}
	return nil
}

type GetServerInformationReply_Services_Notifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationMap []*GetServerInformationReply_Services_Notifications_NotificationMap `protobuf:"bytes,1,rep,name=notification_map,json=notificationMap,proto3" json:"notification_map,omitempty"`
}

func (x *GetServerInformationReply_Services_Notifications) Reset() {
	*x = GetServerInformationReply_Services_Notifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Notifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Notifications) ProtoMessage() {}

func (x *GetServerInformationReply_Services_Notifications) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Notifications.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Notifications) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 4}
}

func (x *GetServerInformationReply_Services_Notifications) GetNotificationMap() []*GetServerInformationReply_Services_Notifications_NotificationMap {
	if x != nil {
		return x.NotificationMap
	}
	return nil
}

type GetServerInformationReply_Services_Logger_LoggerMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetServerInformationReply_Services_Logger_LoggerMap) Reset() {
	*x = GetServerInformationReply_Services_Logger_LoggerMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Logger_LoggerMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Logger_LoggerMap) ProtoMessage() {}

func (x *GetServerInformationReply_Services_Logger_LoggerMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Logger_LoggerMap.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Logger_LoggerMap) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 2, 0}
}

func (x *GetServerInformationReply_Services_Logger_LoggerMap) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetServerInformationReply_Services_Logger_LoggerMap) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetServerInformationReply_Services_Audit_AuditMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetServerInformationReply_Services_Audit_AuditMap) Reset() {
	*x = GetServerInformationReply_Services_Audit_AuditMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Audit_AuditMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Audit_AuditMap) ProtoMessage() {}

func (x *GetServerInformationReply_Services_Audit_AuditMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Audit_AuditMap.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Audit_AuditMap) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 3, 0}
}

func (x *GetServerInformationReply_Services_Audit_AuditMap) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetServerInformationReply_Services_Audit_AuditMap) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetServerInformationReply_Services_Notifications_NotificationMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            string                                                                             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	TargetIdStatus []*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus `protobuf:"bytes,2,rep,name=target_id_status,json=targetIdStatus,proto3" json:"target_id_status,omitempty"`
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap) Reset() {
	*x = GetServerInformationReply_Services_Notifications_NotificationMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Notifications_NotificationMap) ProtoMessage() {}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Notifications_NotificationMap.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Notifications_NotificationMap) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 4, 0}
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap) GetTargetIdStatus() []*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus {
	if x != nil {
		return x.TargetIdStatus
	}
	return nil
}

type GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetIdStatusMap []*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap `protobuf:"bytes,1,rep,name=target_id_status_map,json=targetIdStatusMap,proto3" json:"target_id_status_map,omitempty"`
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus) Reset() {
	*x = GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus) ProtoMessage() {
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 4, 0, 0}
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus) GetTargetIdStatusMap() []*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap {
	if x != nil {
		return x.TargetIdStatusMap
	}
	return nil
}

type GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap) Reset() {
	*x = GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap) ProtoMessage() {
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 3, 4, 0, 0, 0}
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetServerInformationReply_ServerProperties_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetServerInformationReply_ServerProperties_Network) Reset() {
	*x = GetServerInformationReply_ServerProperties_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_ServerProperties_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_ServerProperties_Network) ProtoMessage() {}

func (x *GetServerInformationReply_ServerProperties_Network) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_ServerProperties_Network.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_ServerProperties_Network) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 6, 0}
}

func (x *GetServerInformationReply_ServerProperties_Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties_Network) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetServerInformationReply_ServerProperties_Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string  `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	RootDisk        bool    `protobuf:"varint,2,opt,name=root_disk,json=rootDisk,proto3" json:"root_disk,omitempty"`
	DrivePath       string  `protobuf:"bytes,3,opt,name=drive_path,json=drivePath,proto3" json:"drive_path,omitempty"`
	Healing         bool    `protobuf:"varint,4,opt,name=healing,proto3" json:"healing,omitempty"`
	State           string  `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Uuid            string  `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Model           string  `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`
	TotalSpace      uint64  `protobuf:"varint,8,opt,name=total_space,json=totalSpace,proto3" json:"total_space,omitempty"`
	UsedSpace       uint64  `protobuf:"varint,9,opt,name=used_space,json=usedSpace,proto3" json:"used_space,omitempty"`
	AvailableSpace  uint64  `protobuf:"varint,10,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	ReadThroughput  float32 `protobuf:"fixed32,11,opt,name=read_throughput,json=readThroughput,proto3" json:"read_throughput,omitempty"`
	WriteThroughput float32 `protobuf:"fixed32,12,opt,name=write_throughput,json=writeThroughput,proto3" json:"write_throughput,omitempty"`
	ReadLatency     float32 `protobuf:"fixed32,13,opt,name=read_latency,json=readLatency,proto3" json:"read_latency,omitempty"`
	WriteLatency    float32 `protobuf:"fixed32,14,opt,name=write_latency,json=writeLatency,proto3" json:"write_latency,omitempty"`
	Utilization     float32 `protobuf:"fixed32,15,opt,name=utilization,proto3" json:"utilization,omitempty"`
}

func (x *GetServerInformationReply_ServerProperties_Disk) Reset() {
	*x = GetServerInformationReply_ServerProperties_Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInformationReply_ServerProperties_Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInformationReply_ServerProperties_Disk) ProtoMessage() {}

func (x *GetServerInformationReply_ServerProperties_Disk) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInformationReply_ServerProperties_Disk.ProtoReflect.Descriptor instead.
func (*GetServerInformationReply_ServerProperties_Disk) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 6, 1}
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetRootDisk() bool {
	if x != nil {
		return x.RootDisk
	}
	return false
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetDrivePath() string {
	if x != nil {
		return x.DrivePath
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetHealing() bool {
	if x != nil {
		return x.Healing
	}
	return false
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetTotalSpace() uint64 {
	if x != nil {
		return x.TotalSpace
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetUsedSpace() uint64 {
	if x != nil {
		return x.UsedSpace
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetAvailableSpace() uint64 {
	if x != nil {
		return x.AvailableSpace
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetReadThroughput() float32 {
	if x != nil {
		return x.ReadThroughput
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetWriteThroughput() float32 {
	if x != nil {
		return x.WriteThroughput
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetReadLatency() float32 {
	if x != nil {
		return x.ReadLatency
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetWriteLatency() float32 {
	if x != nil {
		return x.WriteLatency
	}
	return 0
}

func (x *GetServerInformationReply_ServerProperties_Disk) GetUtilization() float32 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

type GetVersionReply_VersionInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The tag on the git repository
	GitVersion string `protobuf:"bytes,1,opt,name=git_version,json=gitVersion,proto3" json:"git_version,omitempty"`
	// The hash of the git commit
	GitCommit string `protobuf:"bytes,2,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	// Whether or not the tree was clean when built
	GitTreeState string `protobuf:"bytes,3,opt,name=git_tree_state,json=gitTreeState,proto3" json:"git_tree_state,omitempty"`
	// Date of build
	BuildDate string `protobuf:"bytes,4,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	// Version of go used to compile
	GoVersion string `protobuf:"bytes,5,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	// Compiler used
	Compiler string `protobuf:"bytes,6,opt,name=compiler,proto3" json:"compiler,omitempty"`
	// Platform it was compiled for / running on
	Platform string `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *GetVersionReply_VersionInformation) Reset() {
	*x = GetVersionReply_VersionInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionReply_VersionInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionReply_VersionInformation) ProtoMessage() {}

func (x *GetVersionReply_VersionInformation) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionReply_VersionInformation.ProtoReflect.Descriptor instead.
func (*GetVersionReply_VersionInformation) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetVersionReply_VersionInformation) GetGitVersion() string {
	if x != nil {
		return x.GitVersion
	}
	return ""
}

func (x *GetVersionReply_VersionInformation) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *GetVersionReply_VersionInformation) GetGitTreeState() string {
	if x != nil {
		return x.GitTreeState
	}
	return ""
}

func (x *GetVersionReply_VersionInformation) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *GetVersionReply_VersionInformation) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *GetVersionReply_VersionInformation) GetCompiler() string {
	if x != nil {
		return x.Compiler
	}
	return ""
}

func (x *GetVersionReply_VersionInformation) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0xc6, 0x19, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x71, 0x73, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x71, 0x73, 0x41, 0x72, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x3f, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x66, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x53, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x66, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12,
	0x5b, 0x0a, 0x0f, 0x65, 0x72, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x72, 0x61, 0x73, 0x75, 0x72, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x1f, 0x0a, 0x07, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1f, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1b, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0xb0, 0x0a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x64, 0x61, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x44, 0x41,
	0x50, 0x52, 0x04, 0x6c, 0x64, 0x61, 0x70, 0x12, 0x47, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x67, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x73,
	0x12, 0x44, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x06,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x53, 0x0a, 0x05, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x1a, 0x1e, 0x0a, 0x04, 0x4c, 0x44, 0x41, 0x50, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x97, 0x01, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x56, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x1a, 0x35, 0x0a, 0x09, 0x4c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x1a, 0x91, 0x01, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x52, 0x0a, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x1a,
	0x34, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x90, 0x04, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6f, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x1a, 0x8d, 0x03, 0x0a, 0x0f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x7d,
	0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xe8, 0x01,
	0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x96, 0x01, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x52, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x1a, 0x3d, 0x0a, 0x11, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x32, 0x0a, 0x0d, 0x46, 0x53, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x95, 0x02, 0x0a,
	0x12, 0x45, 0x72, 0x61, 0x73, 0x75, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x63, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x53, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x53, 0x63,
	0x50, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x72, 0x73, 0x63, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x72, 0x73, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x72, 0x73, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x72, 0x73, 0x63, 0x50, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x1a, 0xc7, 0x06, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x49, 0x0a, 0x05,
	0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b,
	0x52, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x1a, 0x33, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xdf, 0x03, 0x0a,
	0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x70, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x54,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67,
	0x68, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09,
	0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x08, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x73, 0x73, 0x6c, 0x22, 0xed, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x57, 0x0a, 0x13, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0xf0, 0x01, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x67, 0x69, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x69, 0x74,
	0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x32, 0xe8, 0x01, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67,
	0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x1d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x69,
	0x6f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x42, 0x92, 0x02, 0x5a, 0x04, 0x2e, 0x3b, 0x76, 0x31, 0x92, 0x41, 0x88, 0x02, 0x12, 0x65, 0x0a,
	0x18, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x41, 0x50, 0x49, 0x22, 0x41, 0x0a, 0x0f, 0x4d, 0x69, 0x63,
	0x68, 0x61, 0x65, 0x6c, 0x20, 0x56, 0x65, 0x6e, 0x65, 0x7a, 0x69, 0x61, 0x12, 0x1a, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x65, 0x6e, 0x65, 0x7a, 0x69, 0x61, 0x1a, 0x12, 0x6d, 0x76, 0x65, 0x6e, 0x65, 0x7a,
	0x69, 0x61, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x06, 0x76, 0x30,
	0x2e, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x23, 0x0a, 0x21,
	0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x72, 0x52, 0x0a, 0x23, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x50, 0x49, 0x12, 0x2b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x65, 0x6e,
	0x65, 0x7a, 0x69, 0x61, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2d, 0x73, 0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_proto_goTypes = []interface{}{
	(*GetServerInformationMsg)(nil),                                                                           // 0: v1.GetServerInformationMsg
	(*GetServerInformationReply)(nil),                                                                         // 1: v1.GetServerInformationReply
	(*GetVersionMsg)(nil),                                                                                     // 2: v1.GetVersionMsg
	(*Endpoint)(nil),                                                                                          // 3: v1.Endpoint
	(*GetVersionReply)(nil),                                                                                   // 4: v1.GetVersionReply
	(*GetServerInformationReply_Buckets)(nil),                                                                 // 5: v1.GetServerInformationReply.Buckets
	(*GetServerInformationReply_Objects)(nil),                                                                 // 6: v1.GetServerInformationReply.Objects
	(*GetServerInformationReply_Usage)(nil),                                                                   // 7: v1.GetServerInformationReply.Usage
	(*GetServerInformationReply_Services)(nil),                                                                // 8: v1.GetServerInformationReply.Services
	(*GetServerInformationReply_FSBackendType)(nil),                                                           // 9: v1.GetServerInformationReply.FSBackendType
	(*GetServerInformationReply_ErasureBackendType)(nil),                                                      // 10: v1.GetServerInformationReply.ErasureBackendType
	(*GetServerInformationReply_ServerProperties)(nil),                                                        // 11: v1.GetServerInformationReply.ServerProperties
	(*GetServerInformationReply_Services_Vault)(nil),                                                          // 12: v1.GetServerInformationReply.Services.Vault
	(*GetServerInformationReply_Services_LDAP)(nil),                                                           // 13: v1.GetServerInformationReply.Services.LDAP
	(*GetServerInformationReply_Services_Logger)(nil),                                                         // 14: v1.GetServerInformationReply.Services.Logger
	(*GetServerInformationReply_Services_Audit)(nil),                                                          // 15: v1.GetServerInformationReply.Services.Audit
	(*GetServerInformationReply_Services_Notifications)(nil),                                                  // 16: v1.GetServerInformationReply.Services.Notifications
	(*GetServerInformationReply_Services_Logger_LoggerMap)(nil),                                               // 17: v1.GetServerInformationReply.Services.Logger.LoggerMap
	(*GetServerInformationReply_Services_Audit_AuditMap)(nil),                                                 // 18: v1.GetServerInformationReply.Services.Audit.AuditMap
	(*GetServerInformationReply_Services_Notifications_NotificationMap)(nil),                                  // 19: v1.GetServerInformationReply.Services.Notifications.NotificationMap
	(*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus)(nil),                   // 20: v1.GetServerInformationReply.Services.Notifications.NotificationMap.TargetIDStatus
	(*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap)(nil), // 21: v1.GetServerInformationReply.Services.Notifications.NotificationMap.TargetIDStatus.TargetIDStatusMap
	(*GetServerInformationReply_ServerProperties_Network)(nil),                                                // 22: v1.GetServerInformationReply.ServerProperties.Network
	(*GetServerInformationReply_ServerProperties_Disk)(nil),                                                   // 23: v1.GetServerInformationReply.ServerProperties.Disk
	(*GetVersionReply_VersionInformation)(nil),                                                                // 24: v1.GetVersionReply.VersionInformation
}
var file_api_proto_depIdxs = []int32{
	3,  // 0: v1.GetServerInformationMsg.endpoint:type_name -> v1.Endpoint
	5,  // 1: v1.GetServerInformationReply.buckets:type_name -> v1.GetServerInformationReply.Buckets
	6,  // 2: v1.GetServerInformationReply.objects:type_name -> v1.GetServerInformationReply.Objects
	7,  // 3: v1.GetServerInformationReply.usage:type_name -> v1.GetServerInformationReply.Usage
	8,  // 4: v1.GetServerInformationReply.services:type_name -> v1.GetServerInformationReply.Services
	9,  // 5: v1.GetServerInformationReply.fs_backend:type_name -> v1.GetServerInformationReply.FSBackendType
	10, // 6: v1.GetServerInformationReply.erasure_backend:type_name -> v1.GetServerInformationReply.ErasureBackendType
	11, // 7: v1.GetServerInformationReply.servers:type_name -> v1.GetServerInformationReply.ServerProperties
	24, // 8: v1.GetVersionReply.version_information:type_name -> v1.GetVersionReply.VersionInformation
	12, // 9: v1.GetServerInformationReply.Services.vault:type_name -> v1.GetServerInformationReply.Services.Vault
	13, // 10: v1.GetServerInformationReply.Services.ldap:type_name -> v1.GetServerInformationReply.Services.LDAP
	14, // 11: v1.GetServerInformationReply.Services.loggers:type_name -> v1.GetServerInformationReply.Services.Logger
	15, // 12: v1.GetServerInformationReply.Services.audits:type_name -> v1.GetServerInformationReply.Services.Audit
	16, // 13: v1.GetServerInformationReply.Services.notifications:type_name -> v1.GetServerInformationReply.Services.Notifications
	22, // 14: v1.GetServerInformationReply.ServerProperties.network:type_name -> v1.GetServerInformationReply.ServerProperties.Network
	23, // 15: v1.GetServerInformationReply.ServerProperties.disks:type_name -> v1.GetServerInformationReply.ServerProperties.Disk
	17, // 16: v1.GetServerInformationReply.Services.Logger.logger_map:type_name -> v1.GetServerInformationReply.Services.Logger.LoggerMap
	18, // 17: v1.GetServerInformationReply.Services.Audit.audit_map:type_name -> v1.GetServerInformationReply.Services.Audit.AuditMap
	19, // 18: v1.GetServerInformationReply.Services.Notifications.notification_map:type_name -> v1.GetServerInformationReply.Services.Notifications.NotificationMap
	20, // 19: v1.GetServerInformationReply.Services.Notifications.NotificationMap.target_id_status:type_name -> v1.GetServerInformationReply.Services.Notifications.NotificationMap.TargetIDStatus
	21, // 20: v1.GetServerInformationReply.Services.Notifications.NotificationMap.TargetIDStatus.target_id_status_map:type_name -> v1.GetServerInformationReply.Services.Notifications.NotificationMap.TargetIDStatus.TargetIDStatusMap
	2,  // 21: v1.minioadmin.GetVersionInformation:input_type -> v1.GetVersionMsg
	0,  // 22: v1.minioadmin.GetServerInformation:input_type -> v1.GetServerInformationMsg
	4,  // 23: v1.minioadmin.GetVersionInformation:output_type -> v1.GetVersionReply
	1,  // 24: v1.minioadmin.GetServerInformation:output_type -> v1.GetServerInformationReply
	23, // [23:25] is the sub-list for method output_type
	21, // [21:23] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Buckets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Objects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Usage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_FSBackendType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_ErasureBackendType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_ServerProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Vault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_LDAP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Logger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Audit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Notifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Logger_LoggerMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Audit_AuditMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Notifications_NotificationMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_Services_Notifications_NotificationMap_TargetIDStatus_TargetIDStatusMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_ServerProperties_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInformationReply_ServerProperties_Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionReply_VersionInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetServerInformationReply_FsBackend)(nil),
		(*GetServerInformationReply_ErasureBackend)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MinioadminClient is the client API for Minioadmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MinioadminClient interface {
	// Will return version information about api server
	GetVersionInformation(ctx context.Context, in *GetVersionMsg, opts ...grpc.CallOption) (*GetVersionReply, error)
	GetServerInformation(ctx context.Context, in *GetServerInformationMsg, opts ...grpc.CallOption) (*GetServerInformationReply, error)
}

type minioadminClient struct {
	cc grpc.ClientConnInterface
}

func NewMinioadminClient(cc grpc.ClientConnInterface) MinioadminClient {
	return &minioadminClient{cc}
}

func (c *minioadminClient) GetVersionInformation(ctx context.Context, in *GetVersionMsg, opts ...grpc.CallOption) (*GetVersionReply, error) {
	out := new(GetVersionReply)
	err := c.cc.Invoke(ctx, "/v1.minioadmin/GetVersionInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minioadminClient) GetServerInformation(ctx context.Context, in *GetServerInformationMsg, opts ...grpc.CallOption) (*GetServerInformationReply, error) {
	out := new(GetServerInformationReply)
	err := c.cc.Invoke(ctx, "/v1.minioadmin/GetServerInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MinioadminServer is the server API for Minioadmin service.
type MinioadminServer interface {
	// Will return version information about api server
	GetVersionInformation(context.Context, *GetVersionMsg) (*GetVersionReply, error)
	GetServerInformation(context.Context, *GetServerInformationMsg) (*GetServerInformationReply, error)
}

// UnimplementedMinioadminServer can be embedded to have forward compatible implementations.
type UnimplementedMinioadminServer struct {
}

func (*UnimplementedMinioadminServer) GetVersionInformation(context.Context, *GetVersionMsg) (*GetVersionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersionInformation not implemented")
}
func (*UnimplementedMinioadminServer) GetServerInformation(context.Context, *GetServerInformationMsg) (*GetServerInformationReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerInformation not implemented")
}

func RegisterMinioadminServer(s *grpc.Server, srv MinioadminServer) {
	s.RegisterService(&_Minioadmin_serviceDesc, srv)
}

func _Minioadmin_GetVersionInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinioadminServer).GetVersionInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.minioadmin/GetVersionInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinioadminServer).GetVersionInformation(ctx, req.(*GetVersionMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Minioadmin_GetServerInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerInformationMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinioadminServer).GetServerInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.minioadmin/GetServerInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinioadminServer).GetServerInformation(ctx, req.(*GetServerInformationMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Minioadmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.minioadmin",
	HandlerType: (*MinioadminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersionInformation",
			Handler:    _Minioadmin_GetVersionInformation_Handler,
		},
		{
			MethodName: "GetServerInformation",
			Handler:    _Minioadmin_GetServerInformation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
